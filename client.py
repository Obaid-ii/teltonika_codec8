import socket

def send_raw_data_to_server(host='20.174.9.78', port=9025, imei=None, packet=None):
    if imei is None:
        raise ValueError("No IMEI provided")
    if packet is None:
        raise ValueError("No packet provided")

    # Create a TCP/IP socket
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    # Connect the socket to the server
    client_socket.connect((host, port))
    
    try:
        # Step 1: Send IMEI directly as provided
        client_socket.sendall(imei)
        print(f'Sent IMEI to server: {imei}')

        # Step 2: Wait for server's acceptance/rejection (1 byte)
        response = client_socket.recv(1)
        if response == b'\x01':
            print("Server accepted the IMEI.")
            
            # Step 3: Send raw binary AVL data to the server
            client_socket.sendall(packet)
            #print('Sent AVL data to server:', packet)
            # Wait for response
            response = client_socket.recv(8)  # Expecting 8 bytes response
            print(f'Received response from server: {response}')
        else:
            print("Server rejected the IMEI.")
        
    finally:
        # Close the socket
        client_socket.close()

if __name__ == "__main__":
    # IMEI in the exact format provided
    imei = b'\x00\x0F\x33\x35\x36\x33\x30\x37\x30\x34\x32\x34\x34\x31\x30\x31\x33'

    # Example binary packet (replace with your actual data)
    #example_packet = bytes.fromhex
    #example_packet = bytes.fromhex('000000000000002808010000016B40D9AD80010000000000000000000000000000000103021503010101425E100000010000F22A')
    #example_packet = b'\x00\x00\x00\x00\x00\x00\x006\x08\x01\x00\x00\x01k@\xd8\xea0\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x05\x02\x15\x03\x01\x01\x01B^\x0f\x01\xf1\x00\x00`\x1a\x01N\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\xc7\xcf'
    example_packet = bytes.fromhex('000000000000004308020000016B40D57B480100000000000000000000000000000001010101000000000000016B40D5C198010000000000000000000000000000000101010101000000020000252C')
    send_raw_data_to_server(imei=imei, packet=example_packet)
